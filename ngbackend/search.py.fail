# -- coding:utf-8 --
#usage: process the get request of the app
from django.http import HttpResponse
from django.utils import simplejson

from django.utils.http import urlquote
import urllib

import SearchMysql_v2 as searchmysql
import IndexMysql
'''
interface for querying from app
use standard get request
return json
'''


searchmysql.initJvm()


def search(request):
    #try:
    if request.method == 'GET':
        # extract the specified get parameters
        #command = urlquote(request.GET.get['command']).decode('utf8')
        command = urllib.unquote(request.GET.get('command'))
        start = int(urllib.unquote(request.GET.get('start')))#start 规定从0开始
        count = int(urllib.unquote(request.GET.get('count')))


        # here goes the pylucene routines, fetch results and construct json
        # we can construct a standard python dictionary and then convert it to json
        # examples for returning json are demonstrated blow

        
        awrapper = IndexMysql.createawrapper()
        searcher,analyzer = searchmysql.config()
        retlist = searchmysql.run(command,searcher,awrapper)

        anscount = len(retlist)

        retobj = {}

        if start+count < anscount:
            retobj['count'] = count
            retobj['start'] = start
            retobj['total'] = anscount
            retobj['subjects'] = retlist[start:start+count]
        elif start < anscount:
            retobj['count'] = anscount-start
            retobj['start'] = start
            retobj['total'] = anscount
            retobj['subjects'] = retlist[start:anscount]
        else:
            retobj['count'] = '老纪你看清楚，总共才'+str(anscount)+'个！'
        
        retjson = retobj
        #retjson = simplejson.dumps(retobj,ensure_ascii=false)  #all is unicode withoout ensure...
        #retjson = eval(retjson) #将原本是字符串的json的引号去掉 比如'[1,2,3]'-->[1,2,3],将字符串变成变量
        #retjson = retlist[0:5] #right encode utf8 list

        '''
        emdjson = {}
        emdjson['code'] = 0
        emdjson['message'] = 'hello little dict'
        emdjson['goal'] = u'测试字典嵌套的json输出'

        retjson['emdjson'] = emdjson
        '''

        return HttpResponse(simplejson.dumps(retjson, ensure_ascii = false), content_type="application/json")
    '''
    except exception, e:
            errjson = {}
            errjson['retcode'] = 1
            errjson['message'] = 'sorry, server exception occurred!'
            errjson['exceptioncode'] = e.args[0]
            #errjson['exceptionmessage'] = e.args[1]
            return httpresponse(simplejson.dumps(errjson, ensure_ascii = false), content_type="application/json")
    '''
